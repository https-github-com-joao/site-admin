{"version":3,"file":"index.m.js","sources":["../src/constants.js","../src/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nexport const PARTIALS_TO_VERIFY_MOD_10 = [\n  {\n    start: 0,\n    end: 9,\n    digitIndex: 9,\n  },\n  {\n    start: 10,\n    end: 20,\n    digitIndex: 20,\n  },\n  {\n    start: 21,\n    end: 31,\n    digitIndex: 31,\n  },\n];\n\nexport const DIGITABLE_LINE_LENGTH = 47;\n\nexport const CHECK_DIGIT_MOD_11_POSITION = 4;\n\nexport const MOD_11_WEIGHTS = {\n  initial: 2,\n  end: 9,\n  increment: 1,\n};\n\nexport const MOD_10_WEIGHTS = [2, 1];\n\nexport const DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS = [\n  { start: 0, end: 4 },\n  { start: 32, end: 47 },\n  { start: 4, end: 9 },\n  { start: 10, end: 20 },\n  { start: 21, end: 31 },\n];\n","import onlyNumbers from '@brazilian-utils/helper-only-numbers';\n\nimport {\n  CHECK_DIGIT_MOD_11_POSITION,\n  DIGITABLE_LINE_LENGTH,\n  MOD_10_WEIGHTS,\n  MOD_11_WEIGHTS,\n  PARTIALS_TO_VERIFY_MOD_10,\n  DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS,\n} from './constants';\n\nconst isValidLength = digitableLine => digitableLine.length === DIGITABLE_LINE_LENGTH;\n\nconst mod10 = partial => {\n  const weights = MOD_10_WEIGHTS;\n\n  const sum = partial\n    .split('')\n    .reverse()\n    .reduce((acc, digit, index) => {\n      const mult = digit * weights[index % 2];\n      return acc + (mult > 9 ? 1 + (mult % 10) : mult);\n    }, 0);\n\n  const mod = sum % 10;\n\n  return mod > 0 ? 10 - mod : 0;\n};\n\nconst mod11 = value => {\n  let weight = MOD_11_WEIGHTS.initial;\n\n  const sum = value\n    .split('')\n    .reverse()\n    .reduce((acc, digit) => {\n      const mult = digit * weight;\n\n      weight = weight < MOD_11_WEIGHTS.end ? weight + 1 : MOD_11_WEIGHTS.initial;\n\n      return acc + mult;\n    }, 0);\n\n  const mod = sum % 11;\n\n  return mod === 0 || mod === 1 ? 1 : 11 - mod;\n};\n\nconst validateDigitableLinePartials = digitableLine => {\n  const isValid = PARTIALS_TO_VERIFY_MOD_10.every(partial => {\n    const mod = mod10(digitableLine.substring(partial.start, partial.end));\n    return +digitableLine[partial.digitIndex] === mod;\n  });\n\n  return isValid;\n};\n\nconst parseDigitableLine = digitableLine =>\n  DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS.reduce(\n    (acc, pos) => acc + digitableLine.substring(pos.start, pos.end),\n    ''\n  );\n\nconst validateMod11CheckDigit = parsedLine => {\n  const mod = mod11(\n    parsedLine.slice(0, CHECK_DIGIT_MOD_11_POSITION) + parsedLine.slice(CHECK_DIGIT_MOD_11_POSITION + 1)\n  );\n  return +parsedLine[CHECK_DIGIT_MOD_11_POSITION] === mod;\n};\n\nexport default function isValidBoleto(digitableLine) {\n  const clearValue = onlyNumbers(digitableLine);\n\n  if (!isValidLength(clearValue)) return false;\n\n  if (!validateDigitableLinePartials(clearValue)) return false;\n\n  const parsedValue = parseDigitableLine(clearValue);\n\n  return validateMod11CheckDigit(parsedValue);\n}\n"],"names":["const","PARTIALS_TO_VERIFY_MOD_10","start","end","digitIndex","MOD_11_WEIGHTS","MOD_10_WEIGHTS","DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS","isValidLength","digitableLine","length","validateDigitableLinePartials","every","partial","mod","weights","split","reverse","reduce","acc","digit","index","mult","mod10","substring","parseDigitableLine","pos","validateMod11CheckDigit","parsedLine","value","let","weight","mod11","slice","CHECK_DIGIT_MOD_11_POSITION","clearValue","onlyNumbers","parsedValue"],"mappings":"oDAEOA,IAAMC,IAETC,MAAO,EACPC,IAAK,EACLC,WAAY,IAGZF,MAAO,GACPC,IAAK,GACLC,WAAY,KAGZF,MAAO,GACPC,IAAK,GACLC,WAAY,KAQHC,EACF,EADEA,EAEN,EAIMC,GAAkB,EAAG,GAErBC,IACTL,MAAO,EAAGC,IAAK,IACfD,MAAO,GAAIC,IAAK,KAChBD,MAAO,EAAGC,IAAK,IACfD,MAAO,GAAIC,IAAK,KAChBD,MAAO,GAAIC,IAAK,KC1BdK,WAAgBC,UDSe,KCTEA,EAAcC,QAqC/CC,WAAgCF,GAMpC,OALgBR,EAA0BW,eAAMC,GAC9Cb,IAAMc,WArCID,GACZb,IAAMe,EAAUT,EAUVQ,EARMD,EACTG,MAAM,IACNC,UACAC,gBAAQC,EAAKC,EAAOC,GACnBrB,IAAMsB,EAAOF,EAAQL,EAAQM,EAAQ,GACrC,OAAOF,GAAOG,EAAO,EAAI,EAAKA,EAAO,GAAMA,IAC1C,GAEa,GAElB,OAAOR,EAAM,EAAI,GAAKA,EAAM,EAwBdS,CAAMd,EAAce,UAAUX,EAAQX,MAAOW,EAAQV,MACjE,OAAQM,EAAcI,EAAQT,cAAgBU,KAM5CW,WAAqBhB,UACzBF,EAA2CW,gBACxCC,EAAKO,UAAQP,EAAMV,EAAce,UAAUE,EAAIxB,MAAOwB,EAAIvB,MAC3D,KAGEwB,WAA0BC,GAC9B5B,IAAMc,WAnCMe,GACZC,IAAIC,EAAS1B,EAaPS,EAXMe,EACTb,MAAM,IACNC,UACAC,gBAAQC,EAAKC,GACZpB,IAAMsB,EAAOF,EAAQW,EAIrB,OAFAA,EAASA,EAAS1B,EAAqB0B,EAAS,EAAI1B,EAE7Cc,EAAMG,GACZ,GAEa,GAElB,OAAe,IAARR,GAAqB,IAARA,EAAY,EAAI,GAAKA,EAmB7BkB,CACVJ,EAAWK,MAAM,ED3CsB,GC2CYL,EAAWK,MAAMC,IAEtE,OAAQN,ED7CiC,KC6CWd,kBAGvC,SAAuBL,GACpCT,IAAMmC,EAAaC,EAAY3B,GAE/B,IAAKD,EAAc2B,GAAa,OAAO,EAEvC,IAAKxB,EAA8BwB,GAAa,OAAO,EAEvDnC,IAAMqC,EAAcZ,EAAmBU,GAEvC,OAAOR,EAAwBU"}